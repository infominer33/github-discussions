[
  
  {
    "title": "Add a method to get all the credentials for a rely party on the client device to support the rely party (website) to limit the number of accounts a user can register",
    "url": "/github-discussions/webauthn/2222/",
    "categories": "w3c",
    "tags": "webauthn",
    "date": "2024-12-26 16:29:59 -0800",
    





    
    "snippet": "URL: https://github.com/w3c/webauthn/issues/2222It is very easy for a user to register many accounts on a website which using webauthn, but it seems that there is no an easy way to limit this capab...",
    "content": "URL: https://github.com/w3c/webauthn/issues/2222It is very easy for a user to register many accounts on a website which using webauthn, but it seems that there is no an easy way to limit this capability of the user, for it is not easy to identify the user or the authenticator (many platforms do not return its AAGUID even if the “enterprise” conveyance option is used.) using javascript in browsers when the user is registering.If there is a method that can get all the credentials for a rely party on the client device, the rely party (website) can easily limit the number of accounts a user can register using the client device.Thank you very much."
  },
  
  {
    "title": "Define fragment processing rules for `application/did`",
    "url": "/github-discussions/did-core/873/",
    "categories": "w3c",
    "tags": "did-core",
    "date": "2024-12-19 08:48:46 -0800",
    





    
    "snippet": "URL: https://github.com/w3c/did-core/issues/873The specification currently doesn’t define fragment processing rules. We have to define those rules by either reusing the one from application/cid or ...",
    "content": "URL: https://github.com/w3c/did-core/issues/873The specification currently doesn’t define fragment processing rules. We have to define those rules by either reusing the one from application/cid or defining new ones."
  },
  
  {
    "title": "The links in a spec should tested - manually or automatically - after each build.",
    "url": "/github-discussions/did-extensions/598/",
    "categories": "w3c",
    "tags": "did-extensions",
    "date": "2024-11-22 07:57:38 -0800",
    





    
    "snippet": "URL: https://github.com/w3c/did-extensions/issues/598Processes / process documentation needs to be updated.RE: https://github.com/w3c/did-extensions/issues/585#issuecomment-2494086460",
    "content": "URL: https://github.com/w3c/did-extensions/issues/598Processes / process documentation needs to be updated.RE: https://github.com/w3c/did-extensions/issues/585#issuecomment-2494086460"
  },
  
  {
    "title": "Fix mac-os build",
    "url": "/github-discussions/credential-schemas/21/",
    "categories": "decentralized-identity",
    "tags": "credential-schemas",
    "date": "2024-11-04 05:41:24 -0800",
    





    
    "snippet": "URL: https://github.com/decentralized-identity/credential-schemas/issues/21See https://github.com/hyperledger/indy-cli-rs/pull/20",
    "content": "URL: https://github.com/decentralized-identity/credential-schemas/issues/21See https://github.com/hyperledger/indy-cli-rs/pull/20"
  },
  
  {
    "title": "(chore) rust 1.83 update, dependency updates and workspace deps usage",
    "url": "/github-discussions/identus-cloud-agent/1320/",
    "categories": "hyperledger",
    "tags": "identus-cloud-agent",
    "date": "2024-09-04 10:03:40 -0700",
    





    
    "snippet": "URL: https://github.com/hyperledger/identus-cloud-agent/pull/1320Updates some major dep versions (notably askar), updates minor versions in the lockfile with cargo update, and convert alot of commo...",
    "content": "URL: https://github.com/hyperledger/identus-cloud-agent/pull/1320Updates some major dep versions (notably askar), updates minor versions in the lockfile with cargo update, and convert alot of common dependencies to workspace deps"
  },
  
  {
    "title": "CoreData Crash on credentialsDAO.addCredential",
    "url": "/github-discussions/dpv/183/",
    "categories": "w3c",
    "tags": "dpv",
    "date": "2024-08-24 09:58:44 -0700",
    





    
    "snippet": "URL: https://github.com/w3c/dpv/issues/183Is this a regression?YesDescriptionI’m trying to process didcommIssueCredential3_0 Messages:Because Pluto seems to redeliver EVERY message, including Crede...",
    "content": "URL: https://github.com/w3c/dpv/issues/183Is this a regression?YesDescriptionI’m trying to process didcommIssueCredential3_0 Messages:Because Pluto seems to redeliver EVERY message, including Credentials, it seems to crash CoreData.I’ve tried calling processIssuedCredentialMessage from Main or Task.detached and it seems to crash each time.  Threading issue? or am I just “holding it wrong”?This is something I found related to the error I’m seeing:  https://stackoverflow.com/questions/44963142/how-to-fix-attempt-to-recursively-call-save-error-with-coredataPlease provide the exception or error you sawError Domain=NSCocoaErrorDomain Code=132001 \"(null)\" UserInfo={message=attempt to recursively call -save: on the context aborted, stack trace=(\t0   CoreData                            0x0000000186dae1f4 -[NSManagedObjectContext save:] + 128Please provide the environment you discovered this bug inidentus-edge-agent-sdk-swift 7.0.0Anything else?It would take a bit to isolate this into an example project, but I’m happy to show you the code over screen share in case it’s something I’m doing wrongError Domain=NSCocoaErrorDomain Code=132001 “(null)” UserInfo={message=attempt to recursively call -save: on the context aborted, stack trace=(\t0   CoreData                            0x0000000186dae1f4 -[NSManagedObjectContext save:] + 128\t1   FlightTix.debug.dylib               0x0000000108103604 $sSo22NSManagedObjectContextC5PlutoE13saveWithBlock5blockyyABKc_tKFyyXEfU_ + 336\t2   FlightTix.debug.dylib               0x00000001080fd830 $sIg_Ieg_TR + 20\t3   FlightTix.debug.dylib               0x00000001080fd854 $sIeg_IyB_TR + 24\t4   CoreData                            0x0000000186db77fc developerSubmittedBlockToNSManagedObjectContextPerform + 476\t5   CoreData                            0x0000000186db7598 -[NSManagedObjectContext performBlockAndWait:] + 256\t6   FlightTix.debug.dylib               0x00000001081033a0 $sSo22NSManagedObjectContextC5PlutoE13saveWithBlock5blockyyABKc_tKF + 416\t7   FlightTix.debug.dylib               0x0000000108101d38 $s5Pluto22WriteContextSubscriber33196AB8F91B0AA4B62B3E4C9093010BD8LLC7performyyxF + 440\t8   FlightTix.debug.dylib               0x0000000108101a74 $s5Pluto22WriteContextSubscriber33_196AB8F91B0AA4B62B3E4C9093010BD8LLC7requestyy7Combine11SubscribersO6DemandVF + 412\t9   FlightTix.debug.dylib               0x0000000108102650 $s5Pluto22WriteContextSubscriber33_196AB8F91B0AA4B62B3E4C9093010BD8LLCyxq_G7Combine12SubscriptionAafGP7requestyyAF11SubscribersO6DemandVFTW + 20\t10  Combine                             0x00000001bd8404a0 $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLC12receiveInner12subscription_yAA12Subscription_p_SitF + 216\t11  Combine                             0x00000001bd8403bc $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLC4SideV7receive12subscriptionyAA12Subscription_p_tF + 20\t12  FlightTix.debug.dylib               0x000000010810293c $s7Combine10PublishersO5PlutoE21WriteContextPublisherV7receive10subscriberyqd__t5InputQyd__RszAA10SubscriberRd__s5Error_p7FailureRtd__lF + 388\t13  FlightTix.debug.dylib               0x0000000108102984 $s7Combine10PublishersO5PlutoE21WriteContextPublisherVy_xGAA0F0AdaHP7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AMRtz5InputQyd__6OutputRtzlFTW + 40\t14  Combine                             0x00000001bd82702c $s7Combine12PublisherBoxC7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF + 36\t15  Combine                             0x00000001bd827234 $s7Combine12AnyPublisherV7receive10subscriberyqd___t5InputQyd__Rsz7FailureQyd__Rs_AA10SubscriberRd__lF + 36\t16  Combine                             0x00000001bd84132c $s7Combine10PublishersO7FlatMapV5Outer33E91C3F00A6DFAAFEA2009FAF507AE039LLC7receiveyAA11SubscribersO6DemandV6OutputQy_F + 336\t17  Combine                             0x00000001bd84287c $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLCy_xq__qd__GAA10SubscriberA2aJP7receiveyAA11SubscribersO6DemandV5InputQzFTW + 20\t18  Combine                             0x00000001bd827670 $s7Combine10PublishersO3MapV5Inner33_5A6CD15A64659A6248DAF677D4BB6188LLV7receiveyAA11SubscribersO6DemandV6OutputQzF + 104\t19  Combine                             0x00000001bd7dbb2c $s7Combine14ReduceProducerC7receiveyAA11SubscribersO6DemandVq_F + 1440\t20  Combine                             0x00000001bd7dc324 $s7Combine14ReduceProducerCyxq_q0_q1_q2_GAA10SubscriberA2aEP7receiveyAA11SubscribersO6DemandV5InputQzFTW + 20\t21  Combine                             0x00000001bd827670 $s7Combine10PublishersO3MapV5Inner33_5A6CD15A64659A6248DAF677D4BB6188LLV7receiveyAA11SubscribersO6DemandV6OutputQzF + 104\t22  FlightTix.debug.dylib               0x00000001080febd0 $s5Pluto24FetchedResultsSubscriber33_674D8215A765417DECF51A837DF0E94DLLC10controller_9didChange2at3for12newIndexPathySo09NSFetchedC10ControllerCySo20NSFetchRequestResult_pG_yp10Foundation0qR0VSgSo0scM4TypeVAQtF + 1276\t23  FlightTix.debug.dylib               0x00000001080fee74 $s5Pluto24FetchedResultsSubscriber33_674D8215A765417DECF51A837DF0E94DLLC10controller_9didChange2at3for12newIndexPathySo09NSFetchedC10ControllerCySo20NSFetchRequestResult_pG_yp10Foundation0qR0VSgSo0scM4TypeVAQtFTo + 544\t24  CoreData                            0x0000000186e1b240 82-[NSFetchedResultsController(PrivateMethods) _core_managedObjectContextDidChange:]_block_invoke + 5544\t25  CoreData                            0x0000000186db77fc developerSubmittedBlockToNSManagedObjectContextPerform + 476\t26  CoreData                            0x0000000186db7598 -[NSManagedObjectContext performBlockAndWait:] + 256\t27  CoreData                            0x0000000186e19c7c -[NSFetchedResultsController _core_managedObjectContextDidChange:] + 96\t28  CoreFoundation                      0x00000001803eb800 __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER + 140\t29  CoreFoundation                      0x00000001803eb724 _CFXRegistrationPost_block_invoke + 84\t30  CoreFoundation                      0x00000001803eac14 _CFXRegistrationPost + 404\t31  CoreFoundation                      0x00000001803ea5f0 _CFXNotificationPost + 688\t32  Foundation                          0x0000000180ed6820 -[NSNotificationCenter postNotificationName:object:userInfo:] + 88\t33  CoreData                            0x0000000186daa0d8 -[NSManagedObjectContext _postObjectsDidChangeNotificationWithUserInfo:] + 320\t34  CoreData                            0x0000000186dbd6f8 -[NSManagedObjectContext _createAndPostChangeNotification:deletions:updates:refreshes:deferrals:wasMerge:] + 1248\t35  CoreData                            0x0000000186dac14c -[NSManagedObjectContext _processRecentChanges:] + 2840\t36  CoreData                            0x0000000186dae2c8 -[NSManagedObjectContext save:] + 340\t37  FlightTix.debug.dylib               0x0000000108103604 $sSo22NSManagedObjectContextC5PlutoE13saveWithBlock5blockyyABKc_tKFyyXEfU_ + 336\t38  FlightTix.debug.dylib               0x00000001080fd830 $sIg_Ieg_TR + 20\t39  FlightTix.debug.dylib               0x00000001080fd854 $sIeg_IyB_TR + 24\t40  CoreData                            0x0000000186db77fc developerSubmittedBlockToNSManagedObjectContextPerform + 476\t41  CoreData                            0x0000000186db7598 -[NSManagedObjectContext performBlockAndWait:] + 256\t42  FlightTix.debug.dylib               0x00000001081033a0 $sSo22NSManagedObjectContextC5PlutoE13saveWithBlock5blockyyABKc_tKF + 416\t43  FlightTix.debug.dylib               0x0000000108101d38 $s5Pluto22WriteContextSubscriber33_196AB8F91B0AA4B62B3E4C9093010BD8LLC7performyyxF + 440\t44  FlightTix.debug.dylib               0x0000000108101a74 $s5Pluto22WriteContextSubscriber33_196AB8F91B0AA4B62B3E4C9093010BD8LLC7requestyy7Combine11SubscribersO6DemandVF + 412\t45  FlightTix.debug.dylib               0x0000000108102650 $s5Pluto22WriteContextSubscriber33_196AB8F91B0AA4B62B3E4C9093010BD8LLCyxq_G7Combine12SubscriptionAafGP7requestyyAF11SubscribersO6DemandVFTW + 20\t46  Combine                             0x00000001bd8404a0 $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLC12receiveInner12subscription_yAA12Subscription_p_SitF + 216\t47  Combine                             0x00000001bd8403bc $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLC4SideV7receive12subscriptionyAA12Subscription_p_tF + 20\t48  FlightTix.debug.dylib               0x000000010810293c $s7Combine10PublishersO5PlutoE21WriteContextPublisherV7receive10subscriberyqd_t5InputQyd__RszAA10SubscriberRd__s5Error_p7FailureRtd__lF + 388\t49  FlightTix.debug.dylib               0x0000000108102984 $s7Combine10PublishersO5PlutoE21WriteContextPublisherVy_xGAA0F0AdaHP7receive10subscriberyqd__tAA10SubscriberRd__7FailureQyd__AMRtz5InputQyd__6OutputRtzlFTW + 40\t50  Combine                             0x00000001bd82702c $s7Combine12PublisherBoxC7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF + 36\t51  Combine                             0x00000001bd827234 $s7Combine12AnyPublisherV7receive10subscriberyqd___t5InputQyd__Rsz7FailureQyd__Rs_AA10SubscriberRd__lF + 36\t52  Combine                             0x00000001bd84132c $s7Combine10PublishersO7FlatMapV5Outer33E91C3F00A6DFAAFEA2009FAF507AE039LLC7receiveyAA11SubscribersO6DemandV6OutputQy_F + 336\t53  Combine                             0x00000001bd84287c $s7Combine10PublishersO7FlatMapV5Outer33_E91C3F00A6DFAAFEA2009FAF507AE039LLCy_xq__qd__GAA10SubscriberA2aJP7receiveyAA11SubscribersO6DemandV5InputQzFTW + 20\t54  Combine                             0x00000001bd827670 $s7Combine10PublishersO3MapV5Inner33_5A6CD15A64659A6248DAF677D4BB6188LLV7receiveyAA11SubscribersO6DemandV6OutputQzF + 104\t55  Combine                             0x00000001bd7dbb2c $s7Combine14ReduceProducerC7receiveyAA11SubscribersO6DemandVq_F + 1440\t56  Combine                             0x00000001bd7dc324 $s7Combine14ReduceProducerCyxq_q0_q1_q2_GAA10SubscriberA2aEP7receiveyAA11SubscribersO6DemandV5InputQzFTW + 20\t57  Combine                             0x00000001bd827670 $s7Combine10PublishersO3MapV5Inner33_5A6CD15A64659A6248DAF677D4BB6188LLV7receiveyAA11SubscribersO6DemandV6OutputQzF + 104\t58  FlightTix.debug.dylib               0x00000001080fd80c $s5Pluto24FetchedResultsSubscriber33_674D8215A765417DECF51A837DF0E94DLLC7requestyy7Combine11SubscribersO6DemandVFyyXEfU + 92\t59  FlightTix.debug.dylib               0x00000001080fd830 $sIg_Ieg_TR + 20\t60  FlightTix.debug.dylib               0x00000001080fd854 $sIeg_IyB_TR + 24\t61  CoreData                            0x0000000186db77fc developerSubmittedBlockToNSManagedObjectContextPerform + 476\t62  libdispatch.dylib                   0x00000001052b25d0 dispatch_client_callout + 16\t63  libdispatch.dylib                   0x00000001052c3b10 _dispatch_sync_invoke_and_complete_recurse + 148\t64  libdispatch.dylib                   0x00000001052c3344 _dispatch_sync_f_slow + 268\t65  CoreData                            0x0000000186db75c8 -[NSManagedObjectContext performBlockAndWait:] + 304\t66  FlightTix.debug.dylib               0x00000001080fd5e4 $s5Pluto24FetchedResultsSubscriber33_674D8215A765417DECF51A837DF0E94DLLC7requestyy7Combine11SubscribersO6DemandVF + 1192\t67  FlightTix.debug.dylib               0x00000001080ff238 $s5Pluto24FetchedResultsSubscriber33_674D8215A765417DECF51A837DF0E94DLLCyxG7Combine12SubscriptionAafGP7requestyyAF11SubscribersO6DemandVFTW + 20\t68  Combine                             0x00000001bd7db574 $s7Combine14ReduceProducerC7receive12subscriptionyAA12Subscription_p_tF + 444\t69  Combine                             0x00000001bd7dc304 $s7Combine14ReduceProducerCyxq_q0_q1_q2_GAA10SubscriberA2aEP7receive12subscriptionyAA12Subscription_p_tFTW + 20\t70  FlightTix.debug.dylib               0x00000001080ff4b0 $s7Combine10PublishersO5PlutoE23FetchedResultsPublisherV7receive10subscriberyx_tAA10SubscriberRzs5Error_p7FailureRtzSaySo20NSFetchRequestResult_pG5InputRtzlF + 356\t71  FlightTix.debug.dylib               0x00000001080ff554 $s7Combine10PublishersO5PlutoE23FetchedResultsPublisherVAA0F0AdaGP7receive10subscriberyqd__tAA10SubscriberRd__7FailureQyd__ALRtz5InputQyd__6OutputRtzlFTW + 28\t72  Combine                             0x00000001bd8274b4 $s7Combine10PublishersO3MapV7receive10subscriberyqd___t5InputQyd__Rs_AA10SubscriberRd__7FailureQyd__AKRtzlF + 268\t73  Combine                             0x00000001bd82702c $s7Combine12PublisherBoxC7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF + 36\t74  Combine                             0x00000001bd827234 $s7Combine12AnyPublisherV7receive10subscriberyqd___t5InputQyd__Rsz7FailureQyd__Rs_AA10SubscriberRd__lF + 36\t75  Combine                             0x00000001bd8477f0 $s7Combine10PublishersO5FirstV7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AIRtz5InputQyd__6OutputRtzlF + 288\t76  Combine                             0x00000001bd8274b4 $s7Combine10PublishersO3MapV7receive10subscriberyqd___t5InputQyd__Rs_AA10SubscriberRd__7FailureQyd__AKRtzlF + 268\t77  Combine                             0x00000001bd840178 $s7Combine10PublishersO7FlatMapV7receive10subscriberyqd___tAA10SubscriberRd__5InputQyd__6OutputRtz7FailureQyd__AMRt_lF + 304\t78  Combine                             0x00000001bd8274b4 $s7Combine10PublishersO3MapV7receive10subscriberyqd___t5InputQyd__Rs_AA10SubscriberRd__7FailureQyd__AKRtzlF + 268\t79  Combine                             0x00000001bd80e474 $s7Combine10PublishersO8MapErrorV7receive10subscriberyqd___t7FailureQyd__Rs_AA10SubscriberRd__5InputQyd__6OutputRtzlF + 268\t80  Combine                             0x00000001bd82702c $s7Combine12PublisherBoxC7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF + 36\t81  Combine                             0x00000001bd827234 $s7Combine12AnyPublisherV7receive10subscriberyqd___t5InputQyd__Rsz7FailureQyd__Rs_AA10SubscriberRd__lF + 36\t82  Combine                             0x00000001bd840178 $s7Combine10PublishersO7FlatMapV7receive10subscriberyqd___tAA10SubscriberRd__5InputQyd__6OutputRtz7FailureQyd__AMRt_lF + 304\t83  Combine                             0x00000001bd8477f0 $s7Combine10PublishersO5FirstV7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AIRtz5InputQyd__6OutputRtzlF + 288\t84  Combine                             0x00000001bd7e6054 $s7Combine22AsyncThrowingPublisherV8IteratorVyAEyx_GxcfC + 180\t85  Combine                             0x00000001bd7e65d8 $s7Combine14AsyncPublisherV04makeB8IteratorAC0E0Vyx_GyFTm + 104\t86  FlightTix.debug.dylib               0x0000000107ef6b58 $s7Combine10PublishersO5FirstV4Cores5Error_p7FailureRtzrlE5await6OutputQzyYaKFTY0_ + 112\t87  FlightTix.debug.dylib               0x000000010850f355 $s9EdgeAgent22ConnectionsManagerImplC11sendMessagey6Domain0G0VSgAGYaKFTQ1_ + 1\t88  FlightTix.debug.dylib               0x000000010852f7b5 $s9EdgeAgent07DIDCommB0C11sendMessage7message6Domain0E0VSgAH_tYaKFTQ1_ + 1\t89  FlightTix.debug.dylib               0x0000000107aa1c75 $s9FlightTix7IdentusC18startMessageStreamyyFy6Domain0E0VcfU0yyYaKcfU_TQ5 + 1\t90  FlightTix.debug.dylib               0x0000000107aa5371 $s9FlightTix7IdentusC18startMessageStreamyyFy6Domain0E0VcfU0yyYaKcfU_TATQ0 + 1\t91  libswift_Concurrency.dylib          0x00000002493a5829 _ZL23completeTaskWithClosurePN5swift12AsyncContextEPNS_10SwiftErrorE + 1)}"
  },
  
  {
    "title": "Add audience section to the spec",
    "url": "/github-discussions/acapy-plugins/876/",
    "categories": "openwallet-foundation",
    "tags": "acapy-plugins",
    "date": "2024-08-05 04:44:02 -0700",
    





    
    "snippet": "URL: https://github.com/openwallet-foundation/acapy-plugins/pull/876This addresses #870.I largely used the proposed text from that issue, but rewrote the first sentence. It could probably use some ...",
    "content": "URL: https://github.com/openwallet-foundation/acapy-plugins/pull/876This addresses #870.I largely used the proposed text from that issue, but rewrote the first sentence. It could probably use some wordsmithing.Also I wasn’t sure on the title. Audience, Intended Audience, Target Audience?Preview | Diff"
  },
  
  {
    "title": "Improve capability delegation example and explanation",
    "url": "/github-discussions/acapy-plugins/875/",
    "categories": "openwallet-foundation",
    "tags": "acapy-plugins",
    "date": "2024-08-05 04:27:24 -0700",
    





    
    "snippet": "URL: https://github.com/openwallet-foundation/acapy-plugins/pull/875Hopefully this clarifies the confusion raised in #812Preview | Diff",
    "content": "URL: https://github.com/openwallet-foundation/acapy-plugins/pull/875Hopefully this clarifies the confusion raised in #812Preview | Diff"
  },
  
  {
    "title": "Normatively reference Controller Document",
    "url": "/github-discussions/owl-agent-test-harness/854/",
    "categories": "openwallet-foundation",
    "tags": "owl-agent-test-harness",
    "date": "2024-07-26 11:04:16 -0700",
    





    
    "snippet": "URL: https://github.com/openwallet-foundation/owl-agent-test-harness/issues/854There is now a Controller Document specification that is on the W3C Recommendation Track through the W3C Verifiable Cr...",
    "content": "URL: https://github.com/openwallet-foundation/owl-agent-test-harness/issues/854There is now a Controller Document specification that is on the W3C Recommendation Track through the W3C Verifiable Credentials Working Group. It is, fundamentally, the DID Core specification but generalized to just the document (not resolution) and allows any URL. The DID Core specification might want to use that specification as the base specification (as it can be done in a way that won’t change implementations)."
  },
  
  {
    "title": "README is empty",
    "url": "/github-discussions/credential-schemas/5/",
    "categories": "decentralized-identity",
    "tags": "credential-schemas",
    "date": "2024-07-16 08:11:03 -0700",
    





    
    "snippet": "URL: https://github.com/decentralized-identity/credential-schemas/issues/5No content available",
    "content": "URL: https://github.com/decentralized-identity/credential-schemas/issues/5No content available"
  },
  
  {
    "title": "Section 3.2 should refer to OID4",
    "url": "/github-discussions/identus/22/",
    "categories": "hyperledger",
    "tags": "identus",
    "date": "2024-07-03 06:27:43 -0700",
    





    
    "snippet": "URL: https://github.com/hyperledger/identus/issues/22Section 3.2 should probably be updated to OpenID for Verifiable Credentials Issuance Draft",
    "content": "URL: https://github.com/hyperledger/identus/issues/22Section 3.2 should probably be updated to OpenID for Verifiable Credentials Issuance Draft"
  },
  
  {
    "title": "ecdsa-rdfc-2019 Transformation passes wrong type to \"Deserialize JSON-LD\"",
    "url": "/github-discussions/spec-up/66/",
    "categories": "decentralized-identity",
    "tags": "spec-up",
    "date": "2024-06-24 11:34:05 -0700",
    





    
    "snippet": "URL: https://github.com/decentralized-identity/spec-up/issues/66https://www.w3.org/TR/vc-di-ecdsa/#transformation-ecdsa-rdfc-2019 takes a map that is not the result of the Node Map Generation algor...",
    "content": "URL: https://github.com/decentralized-identity/spec-up/issues/66https://www.w3.org/TR/vc-di-ecdsa/#transformation-ecdsa-rdfc-2019 takes a map that is not the result of the Node Map Generation algorithm and passes it to https://www.w3.org/TR/json-ld11-api/#deserialize-json-ld-to-rdf-algorithm, which expects “a map node map, which is the result of the Node Map Generation algorithm”.https://github.com/w3c/json-ld-api/issues/579 reports that this type requirement is unclear, but the discussion there indicates that you’re expected to do the extra step in callers."
  },
  
  {
    "title": "Add `raw-private` (and possibly `raw-public` and `raw-secret`) key formats?",
    "url": "/github-discussions/vc-api/393/",
    "categories": "w3c-ccg",
    "tags": "vc-api",
    "date": "2024-06-18 13:07:29 -0700",
    





    
    "snippet": "URL: https://github.com/w3c-ccg/vc-api/issues/393Currently, it’s not possible to import or export a raw private X25519, Ed25519, ECDH or ECDSA key.The spec says raw is “An unformatted sequence of b...",
    "content": "URL: https://github.com/w3c-ccg/vc-api/issues/393Currently, it’s not possible to import or export a raw private X25519, Ed25519, ECDH or ECDSA key.The spec says raw is “An unformatted sequence of bytes. Intended for secret keys.” However, in the mentioned asymmetric algorithms it’s actually used to import and export public keys. And unlike with pkcs8, spki and jwk, there’s no natural way to tell from the format name and/or data whether it’s a private or a public key.So, we could introduce a raw-private key format for importing and exporting raw private keys.Conversely, we could introduce raw-public for importing and exporting raw public keys, and deprecate the usage of raw for that purpose.To complete the trio, we could introduce raw-secret for importing and exporting raw secret keys, and deprecate raw entirely.(In the future, when we add ML-KEM, we may also want raw-seed to import/export the private key seed.)"
  },
  
  {
    "title": "Possibly missing step in HMAC key generation operation",
    "url": "/github-discussions/vc-api/392/",
    "categories": "w3c-ccg",
    "tags": "vc-api",
    "date": "2024-06-18 12:43:20 -0700",
    





    
    "snippet": "URL: https://github.com/w3c-ccg/vc-api/issues/392During the HMAC key generation operation it is never mentioned to set the HmacKeyAlgorithm length property. However, it is mentioned in the key impo...",
    "content": "URL: https://github.com/w3c-ccg/vc-api/issues/392During the HMAC key generation operation it is never mentioned to set the HmacKeyAlgorithm length property. However, it is mentioned in the key import step 12: Set the length attribute of algorithm to length.I suppose there should be a Set the length attribute of algorithm to length. step in key generation.This is checked by generateKey/successes_HMAC in WPT."
  },
  
  {
    "title": "eddsa-rdfc-2022 Transformation passes wrong type to \"Deserialize JSON-LD\"",
    "url": "/github-discussions/tswg-cesr-specification/87/",
    "categories": "trustoverip",
    "tags": "tswg-cesr-specification",
    "date": "2024-04-04 08:14:36 -0700",
    





    
    "snippet": "URL: https://github.com/trustoverip/tswg-cesr-specification/issues/87https://www.w3.org/TR/vc-di-eddsa/#transformation-eddsa-rdfc-2022 takes a map that is not the result of the Node Map Generation ...",
    "content": "URL: https://github.com/trustoverip/tswg-cesr-specification/issues/87https://www.w3.org/TR/vc-di-eddsa/#transformation-eddsa-rdfc-2022 takes a map that is not the result of the Node Map Generation algorithm and passes it to https://www.w3.org/TR/json-ld11-api/#deserialize-json-ld-to-rdf-algorithm, which expects “a map node map, which is the result of the Node Map Generation algorithm”.https://github.com/w3c/json-ld-api/issues/579 reports that this type requirement is unclear, but the discussion there indicates that you’re expected to do the extra step in callers."
  },
  
  {
    "title": "Add AI transcription to WG meetings",
    "url": "/github-discussions/linked-vp/51/",
    "categories": "decentralized-identity",
    "tags": "linked-vp",
    "date": "2024-02-29 00:54:34 -0800",
    





    
    "snippet": "URL: https://github.com/decentralized-identity/linked-vp/issues/51@kimdhamilton Is it possible to activate an AI meeting notetaker at Zoom account level so that it automatically takes notes? Would ...",
    "content": "URL: https://github.com/decentralized-identity/linked-vp/issues/51@kimdhamilton Is it possible to activate an AI meeting notetaker at Zoom account level so that it automatically takes notes? Would people be comfortable meetings being recorded and/or having an AI notetaker?"
  },
  
  {
    "title": "Test Vectors don´t follow/match specification",
    "url": "/github-discussions/dpv/102/",
    "categories": "w3c",
    "tags": "dpv",
    "date": "2023-08-02 02:42:03 -0700",
    





    
    "snippet": "URL: https://github.com/w3c/dpv/issues/102I am trying to implement the eddsa-jcs-2022 cryptosuite. The specification says:§ 3.3.1 Create Proof (eddsa-jcs-2022)2) If unsecuredDocument.@context is pr...",
    "content": "URL: https://github.com/w3c/dpv/issues/102I am trying to implement the eddsa-jcs-2022 cryptosuite. The specification says:§ 3.3.1 Create Proof (eddsa-jcs-2022)2) If unsecuredDocument.@context is present, set proof.@context to unsecuredDocument.@context.The Test Vectors at https://www.w3.org/TR/vc-di-eddsa/#representation-eddsa-jcs-2022 do not reflect that requirement. Do I misunderstand something or are the test vectors outdated?"
  },
  
  {
    "title": "Problematic support of multiple schema versions when using JsonSchemaCredential",
    "url": "/github-discussions/decentralized-web-node/239/",
    "categories": "decentralized-identity",
    "tags": "decentralized-web-node",
    "date": "2023-06-14 09:47:37 -0700",
    





    
    "snippet": "URL: https://github.com/decentralized-identity/decentralized-web-node/issues/239While implementing support for JsonSchemaCredential I have stumbled on implementation issue that I have not foreseen ...",
    "content": "URL: https://github.com/decentralized-identity/decentralized-web-node/issues/239While implementing support for JsonSchemaCredential I have stumbled on implementation issue that I have not foreseen at the beginning. Namely it is the JSON Schema versions supports for the jsonSchema property.Let me explain.From the spec, the JsonSchemaCredential document requires the credentialSchema property to be exactly:{  \"id\": \"https://www.w3.org/ns/credentials/json-schema/v2.json\",  \"type\": \"JsonSchema\",  \"digestSRI\": \"sha384-S57yQDg1MTzF56Oi9DbSQ14u7jBy0RDdx0YbeV7shwhCS88G8SCXeFq82PafhCrW\"}Fetching “https://www.w3.org/ns/credentials/json-schema/v2.json” gives the following schema for jsonSchema:\"jsonSchema\": {  \"anyOf\": [    {      \"$ref\": \"https://json-schema.org/draft/2020-12/schema\"    },    {      \"$ref\": \"https://json-schema.org/draft/2019-09/schema\"    },    {      \"$ref\": \"http://json-schema.org/draft-07/schema\"    }  ]}As you can see, the schema itself is referencing all the recommended JSON Schema versions by spec (draft-7, 2019-09, 2020-12).I am using Ajv as the most standard JSON Schema library for JS, and for the support of 2020-12 version it has a note (https://ajv.js.org/json-schema.html#draft-2020-12) that it is not compatible with older schemas. When using this and when the schema is being compiled, it is failing to load the 2019-09 and draft-07 schemas over and over again entering into endless loop. This is because this schemas as not being expected and not considered meta schemas.I am still not able to find workaround for this issue for using Ajv. I am considering switching to hyperjump-io/json-schema as it seems to support this.Before doing switch or another hacky workaround, it is very suspicious to me that the Ajv team that has focused so much on JSON Schema would make such limiting design decision when not being required. My concern is that such schemas may be considered invalid.Can you please clarify the support of all these schema versions? Maybe it makes sense to make the jsonSchema field be just an object schema and let the implementations try to compile the contents it."
  },
  
  {
    "title": "Verifiable Credential Issued in JWT  should use  short-form Prism DID  in iss",
    "url": "/github-discussions/dpv/89/",
    "categories": "w3c",
    "tags": "dpv",
    "date": "2023-04-13 05:14:50 -0700",
    





    
    "snippet": "URL: https://github.com/w3c/dpv/issues/89A Verifiable Credential issued in JWT format currently uses the long-form of a Prism DID in the iss field of the JWT. We should update this to use the short...",
    "content": "URL: https://github.com/w3c/dpv/issues/89A Verifiable Credential issued in JWT format currently uses the long-form of a Prism DID in the iss field of the JWT. We should update this to use the short-form Prism DID instead. Below is an example of a VC issued in JWT format, and upon decoding, the iss field displays the long-form DIDhttps://github.com/hyperledger/identus-cloud-agent/issues/1451"
  },
  
  {
    "title": "New verification material property supporting JWK sets by reference",
    "url": "/github-discussions/did-core/811/",
    "categories": "w3c",
    "tags": "did-core",
    "date": "2021-12-17 17:31:10 -0800",
    





    
    "snippet": "URL: https://github.com/w3c/did-core/issues/811Presently, publicKeyJwk and publicKeyMultibase are the only verification material types supported for verification methods in the specification. This ...",
    "content": "URL: https://github.com/w3c/did-core/issues/811Presently, publicKeyJwk and publicKeyMultibase are the only verification material types supported for verification methods in the specification. This is limiting for enterprise adoption where security best practice dictates frequent key rolling and hygiene, along with the broad adoption of external key management capabilities such as Azure Key Vault or the Amazon Key Management Service.Proposal is to add a new verification material property publicKeyJwks of type URL, which is similar in behaviour to the jwks_uri property in OpenID Connect metadata."
  }
  
]

