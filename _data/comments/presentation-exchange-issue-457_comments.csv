comment_id,user,date,body
2486333277,carez,2024-11-19T17:30:39+00:00,"In case it helps, my (very own) interpretation is as depicted in this diagram:  ![ECDH-1PU_tag](https://github.com/user-attachments/assets/e9db257b-f4f9-4ab8-b8ea-3abd48455b8f)     # Existing implementations  You can also have a look at existing implementations. I am familiar with these two in python:  ## Authlib https://github.com/lepture/authlib/blob/1cba9804e8684f92b34b0f2b80dbb5c93795ce9c/authlib/jose/drafts/_jwe_algorithms.py#L137C9-L137C36   ## Askar  https://github.com/Indicio-tech/didcomm-messaging-python/blob/a0f6b88d39b90552d1a639334b71cb44ce07634e/didcomm_messaging/crypto/backend/askar.py#L266"
2486735340,jakubkoci,2024-11-19T20:55:58+00:00,"Thanks @carez   I found that DIDComm spec mentions [2.3 Key Derivation for ECDH-1PU Key Agreement](https://datatracker.ietf.org/doc/html/draft-madden-jose-ecdh-1pu-04#section-2.3) for ECDH-1PU and that actually mentions `tag` exactly as your diagram depicts.  But, there is no mention of `tag` in the spec for ECDH-ES I found [4.6  Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES)](https://datatracker.ietf.org/doc/html/rfc7518?ref=blog.identity.foundation#section-4.6)  So, maybe it's just an incorrect copy-paste of the sentence from ECDH-1PU to ECDH-ES.  I also found a mention of the `tag` in Authenticated encryption part of [Understanding JSON Web Encryption (JWE)](https://www.scottbrady91.com/jose/json-web-encryption)."
