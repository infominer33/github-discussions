comment_id,user,date,body
2476352561,emlun,2024-11-14T13:24:50+00:00,"This problem would also apply to any other ""preference-ordered sequence"" parameters, namely [`pubKeyCredParams`](https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams) and [`hints`](https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-hints). For `hints` it is [explicitly specified that duplicates are ignored](https://w3c.github.io/webauthn/#enumdef-publickeycredentialhint), but `pubKeyCredParams` and `attestationFormats` have no explicit statement like that.  I don't think this is a problem in practice, though, precisely because both `pubKeyCredParams` and `attestationFormats` are meant so that the authenticator simply iterates through them and picks the first option it supports. Thus if a supported option appears more than once, the authenticator will just pick the first occurrence and ignore the rest. If an unsupported option appears more than once, it will just be rejected each time it is encountered. In both cases, everything works as expected.  One could make the argument that duplicates are most likely unintended, so it's better to reject them so the RP finds out about the issue. This would, however, not be backwards compatible with existing RP implementations that (intentionally or accidentally) rely on duplicates being silently ignored."
2490015311,Kieun,2024-11-21T03:56:06+00:00,"> One could make the argument that duplicates are most likely unintended, so it's better to reject them so the RP finds out about the issue. This would, however, not be backwards compatible with existing RP implementations that (intentionally or accidentally) rely on duplicates being silently ignored.  I agree that throwing an error is a bad approach. But, adding some notes explicitly make the readers and developers to clearly understand how the underlying client and authenticator would work."
