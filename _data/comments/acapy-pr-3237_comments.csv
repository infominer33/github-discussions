comment_id,user,date,body
1841305502,dbluhm,2024-11-13T23:10:47+00:00,I'm confused why we're doing this. A DID is distinct from a DID URL?
1841328667,swcurran,2024-11-13T23:44:07+00:00,"I suspect it is because a DID resolves to a DIDDoc, and a DID URL, resolves to whatever the resource is pointed to by the URL (AnonCreds object, OCA bundle, status list VC, etc). The DID still needs to be resolved (perhaps from a cache) before getting the resource, but the resolution result object will be different."
1842346832,jamshale,2024-11-14T14:44:23+00:00,"I had thought the resolver needed the entire did url, but I might not be understanding correctly. Will look into this tomorrow. "
1842905607,dbluhm,2024-11-14T21:24:06+00:00,"For clarity (forgive the pedantism), we resolve DIDs but dereference DID URLs. I think it's valuable to keep the two operations distinct since they're distinct in the DID Core spec. Resolving a DID results in a DID Document. Dereferencing a DID URL results in a ""resource."" So rather than altering the existing resolve endpoint to accept a DID URL, I'd recommend a separate endpoint for that."
1844422483,jamshale,2024-11-15T20:24:37+00:00,"So the resolver endpoint should fail for something like `did:tdw:QmZiKXwQVfyZVuvCsuHpQh4arSUpEmeVVRvSfv3uiEycSr:example.com%3A5000#whois`, and pass for `did:tdw:QmZiKXwQVfyZVuvCsuHpQh4arSUpEmeVVRvSfv3uiEycSr:example.com%3A5000`? I guess I was a bit confused because the did_tdw library resolves `did:tdw:QmZiKXwQVfyZVuvCsuHpQh4arSUpEmeVVRvSfv3uiEycSr:example.com%3A5000#whois`   I think updating this to just resolve dids shouldn't be a problem. I can't remember if I was getting validation errors with a valid did:tdw without the `#` or not. Will refactor it back and check."
1844489404,andrewwhitehead,2024-11-15T21:07:53+00:00,"The `resolve_did` method which is used here does not perform dereferencing (it returns a `ResolutionResult` not a `DereferencingResult`). It does not currently reject a DID URL with a path or extra parameters, although I might make that change to avoid misuse."
1844505748,swcurran,2024-11-15T21:16:56+00:00,"@jamshale is using `#whois` in the examples above, but I think (I hope) they should be `/whois`.  To me, `<did>#` should be for getting a fragment of the DIDDoc.  The `<did>/` is for getting a resource separate from the DIDDoc. And `whois` is an external resource.  That said, I have wondered why the `did:tdw` spec says the implicit service is `#whois`. I wrote what I (think I) was told.  Is that right to get the `/` behaviour?"
1844674972,andrewwhitehead,2024-11-15T23:47:48+00:00,"`#whois` does indeed dereference to the service definition, not the whois document itself. I believe `/whois` should be translated to `?service=whois` by the resolver and dereferenced (to the document) that way."
